plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            lib(MavenPublication) {
                from components.release

                version = '0.0.0'
                groupId = 'com.tunjid'
                artifactId project.getName()

                // Add sources too
                afterEvaluate {
                    artifact(sourcesJar) {
                        classifier = 'sources'
                        extension = 'jar'
                    }
                }
            }
        }
        repositories {
//            maven {
//                name = parent.ext.publishRepoName
//                url = parent.ext.publishUrl
//                credentials {
//                    username = parent.ext.publishUserName
//                    password = parent.ext.publishPassword
//                }
//            }
//            parent.ext.publishRepositories.each { repo ->
//                def props = (repo as ConfigObject).toProperties()
//                maven {
//                    name = props['name']
//                    url = props['url']
//                    credentials {
//                        username = props['credentials.username']
//                        password = props['credentials.password']
//                    }
//                }
//            }
        }
    }
}

// Gradle task to generate sources after building a release aar
task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.dependsOn 'sourcesJar'
    }
}